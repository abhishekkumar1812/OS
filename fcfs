//C++ code of FCFS (First come first Serve)

#include<iostream> 
#include<stdlib.h> 
using namespace std; 
//class process with all the time values and functions 
class Process{ 
    int id, bt, at, ct, tat, wt; 
    public: 
    void input(Process*,int ); 
    void calc(Process *,int); 
    void show(Process*,int); 
    void sort(Process *, int); 
    void avg(Process *, int);
}; 

//main function 
int main(){ 
    int n; 
    cout<<"Enter the no of processes in your system:\n"; 
    cin>>n; 
    Process *p = new Process[n]; 
    Process f; 
    f.input(p,n); 
    f.sort(p, n); 
    f.calc(p,n); 
    f.show(p,n); 
    f.avg(p,n);
    return 0; 
} 

//Taking arrival time and burst times as input for all processes 
void Process::input(Process *p,int n){ 
    for(int i = 0;i<n;i++){ 
        cout<<"Enter arrival time for process "<<i+1<<":\n"; 
        cin>>p[i].at; 
        cout<<"Enter burst time for process "<<i+1<<":\n"; 
        cin>>p[i].bt; 
        p[i].id = i+1; 
    } 
} 

//calculating waiting, turn-around and completion time 
void Process::calc(Process*p, int n){ 

    int sum = p[0].at; 
    for(int i = 0;i<n;i++){ 
        sum = sum + p[i].bt; 
        p[i].ct = sum; 
        p[i].tat = p[i].ct - p[i].at; 
        p[i].wt = p[i].tat - p[i].bt;   
        if(sum<p[i+1].at){ 
            int t = p[i+1].at-sum; 
            sum = sum+t; 
        }  
    } 
} 

//Sorting processes with respect to arrival times (needed for synchronized input) 
void Process::sort(Process*p, int n){ 
    for(int i=0;i<n-1;i++){ 
        for(int j=0;j<n-i-1;j++){ 
            if(p[j].at>p[j+1].at){ 
                swap(p[j], p[j+1]);
            } 
        } 
    } 
} 

//display function 
void Process::show(Process*p, int n){ 
    cout<<"Process \tArrival\tBurst\tWaiting\tTurn Around\tCompletion\n"; 
    for(int i =0;i<n;i++){ 
        cout<<"  P["<<p[i].id<<"]\t  "<<p[i].at<<"\t"<<p[i].bt<<"\t"<<p[i].wt<<"\t   "<<p[i].tat<<"\t\t"<<p[i].ct<<"\n"; 
    } 
}
void Process::avg(Process*p, int n){ 
    float sumTAT = 0, sumWT = 0;
   for(int i = 0; i<n; i++)
   {
    sumTAT+=p[i].tat;
    sumWT+=p[i].wt;
   }
   cout<<"Avg turn around time is " <<sumTAT/n <<endl;
   cout<<"Avg waiting time is " <<sumWT/n <<endl;
}
